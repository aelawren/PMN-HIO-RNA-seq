setwd('C:/Users/Anna-Lisa/Desktop/PMN manuscript/')
# Making venn diagrams with the eulerr package

# Should make area proportional venn diagrams from lists or a matrix

# Libraries and directories
library(dplyr)
library(eulerr)
library(here)
library(magrittr)
library(tidyr)

#read data:
STM_padj<-read.csv('significant/padj/STM_over_PBS_padj.csv')
STM_PMN_padj<-read.csv('significant/padj/STM+PMNs_over_PBS_padj.csv')
PMN_padj<-read.csv('significant/padj/PBS+PMNs_over_PBS_padj.csv')


##add labels
STM_padj$label<-c('STM')
STM_padj$filter<-c('padj')
STM_PMN_padj$label<-c('STM+PMN')
STM_PMN_padj$filter<-c('padj')
PMN_padj$label<-c('PMN')
PMN_padj$filter<-c('padj')

#combine data into one dataframe
data2<-rbind(STM_padj,STM_PMN_padj,PMN_padj)
write.csv(data2, file = 'combined_filter.csv')
data2<-read.csv('significant/combined_filter.csv')

# Function to make venn diagrams
make_venn <- function(df,x1,x2,x3,t, pvalue = 1, l2fc = 0, show_labels = T){

  # Set significance filter
  df$signif <- ifelse(df$pvalue < pvalue & abs(df$log2FoldChange) > l2fc, 'Significant', 'Non significant')
  
  # want to compare all significant genes
incr <- filter(df, signif == 'Significant' & filter == t) %>% 
  select(c(symbol,label)) %>% 
  arrange(label)


# Split into three groups by sample
a <- filter(incr, label == x1) %>% 
  .$symbol
b <- filter(incr, label == x2) %>% 
  .$symbol
c <- filter(incr, label == x3) %>% 
  .$symbol
  
# Calculate number of shared genes in each group
ABC <- length(c[c%in%a[a%in%b]])
AB <- length(a[a%in%b]) - ABC
AC <- length(a[a%in%c]) - ABC
A <- length(a) - AB -AC - ABC
BC <- length(b[b%in%c]) - ABC
BA <- length(b[b%in%a]) - ABC
B <- length(b)-BA-BC-ABC
C <- length(c)-AC-BC-ABC


# Formatting options
eulerr_options(pointsize = 14)
options(digits = 4)


# Input in the form of a named numeric vector
fit1 <- euler(c("A" = A, "B" = B, "C" = C,
                "A&B" = AB, "A&C" = AC, "B&C" = BC,
                "A&B&C" = ABC))

diagram <- plot(fit1, 
             quantities = T,
             fill = c("lightblue", "lightcoral", "lemonchiffon"),
             lty = 1,
             labels = if(show_labels == T){
               F
             }else{
               c(x1,x2,x3)})
return(diagram)
}

# pvalue filtering
# (leave labels off for better formatting in powerpoint)
m2 <- make_venn(data2, 'STM','STM+PMN','PMN','padj', pvalue = 1, l2fc = 0,
                show_labels = F)
m2
m8 <- make_venn(data2, 'STM','STM+PMN','PMN','padj', pvalue = 1, l2fc = 0,
                show_labels = F)
m8
